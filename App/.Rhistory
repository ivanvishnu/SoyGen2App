runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
getwd()
currentGeno <- read.table("current_GenoTable.genotypes",header=F)
dim(currentGeno)
currentGeno[1:5,1:15]
length(which(duplicated(currentGeno[,1]))
)
Geno <- read.table("SimPop1GenoTable6K_Msk_750_10.genotypes")
dim(Geno)
Geno[1:5,1:10]
anyNA(currentGeno)
currentGeno[currentGeno==NA] <- 9
anyNA(currentGeno)
currentGeno[is.na(currentGeno)] <- 9
anyNA(currentGeno)
write.table(currentGeno,"current_GenoTable.genotypes",quote=F,sep=" ",row.names = F,col.names = F)
library(shiny); runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V2.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V2.R')
runApp('API_Shiny_Interface_V2.R')
runApp('API_Shiny_Interface_V3.R')
?fileInput
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V2.R')
runApp('API_Shiny_Interface_V2.R')
runApp('API_Shiny_Interface_V2.R')
runApp('API_Shiny_Interface_V2.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
library(shiny); runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
library(shiny); runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
?tempfile
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
?r_bg
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
library(shiny); runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
print(paste("API","Processing","Imputing","Complete",sep="\n"))
print(paste("API","Processing","Imputing","Complete",sep="\t"),collapse="\n")
print(paste("API\n","Processing\n","Imputing\n","Complete"),collapse="\n")
paste("API\n","Processing\n","Imputing\n","Complete",sep="\n")
paste("API","Processing","Imputing","Complete",sep="\n")
cat(paste("API","Processing","Imputing","Complete",sep="\n"),collapse="\n")
runApp('API_Shiny_Interface_V3.R')
cat(paste("API","Processing","Imputing","Complete",sep="\n"),collapse="\n")
txt <- cat(paste("API","Processing","Imputing","Complete",sep="\n"),collapse="\n")
txt
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
?readLines
txt
out
paste("API","Processing","Imputing","Complete",sep="\n")
out <- paste("API","Processing","Imputing","Complete",sep="\n")
out
txt <- out
paste(txt,"Imputation Completed",sep="\n")
paste(txt,"Imputation Completed",sep="\n",collapse="\n")
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
tab <- matrix(0,5,5)
dim(tab)
paste(dim(tab),sep=" "))
paste(dim(tab),sep=" ")
paste(as.vector(dim(tab)),sep=" ")
paste(dim(tab),sep=" ")
length(paste(dim(tab),sep=" "))
length(paste(as.vector(dim(tab)),sep=" "))
length(paste(as.vector(dim(tab)),collapse=" "))
length(paste(dim(tab),collapse=" "))
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
library(shiny); runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
runApp('API_Shiny_Interface_V3.R')
library(shiny); runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/GSPipelineApp/R/ImputeHome.R')
library(htmltools)
library(shiny); runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/GSPipelineApp/R/ImputeHome.R')
unloadNamespace(htmltools)
unloadNamespace("htmltools")
rm(list=ls())
ls()
library(shiny); runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/GSPipelineApp/R/ImputeHome.R')
unloadNamespace("htmltools")
unloadNamespace("shiny")
unloadNamespace("htmltools")
remove.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
remove.packages("htmltools")
install.packages("htmltools")
library(htmltools)
install.packages("htmltools")
library(shiny); runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/GSPipelineApp/R/ImputeHome.R')
library(shiny); runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/GSPipelineApp/R/ImputeHome.R')
install.packages(c("AlphaSimR", "BGLR", "bWGR", "cli", "data.table", "dplyr", "e1071", "fansi", "gdtools", "gert", "httpuv", "httr2", "jsonlite", "later", "leaflet", "Matrix", "matrixStats", "pinfsc50", "processx", "progress", "qtl", "ragg", "Rdpack", "rJava", "rlang", "rrBLUP", "RSQLite", "s2", "sass", "sommer", "stringi", "units", "utf8", "vcfR", "vctrs", "vroom", "wk", "XML", "xml2"))
library(shiny); runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/GSPipelineApp/R/ImputeHome.R')
library(htmltools)
remove.packages("htmltools")
remove.packages("htmltools")
library(shiny); runApp('API_Shiny_Interface_V3.R')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
library(WGCNA)
?networkConcepts
library(reshape2)
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
q()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
q()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
library(rTASSEL)
unloadNamespace(rTASSEL)
unloadNamespace("rTASSEL")
library(rTASSEL)
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
q()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
a <- cbind(c(1,1,1,2,2,3), c(2,3,4,3,4,4), 1:6, 6:1)
dim(a)
a[1:5,]
Dis <- matrix(0,nrow=178,ncol=178)
Dis.L <- lower.tri(Dis)
dim(Dis.L)
Dis.L[1:5,]
DL <- c(1:100)
length(which(Dis.L))
dim(Dis)
178*178
getwd()
setwd("C:/Users/ivanv/Downloads/")
setwd("C:/Users/ivanv/Documents/")
f <- "scn_il_phylo.dist"
x <- scan(f)
dims <- floor(sqrt(length(x) * 2))
m <- matrix(NA, dims, dims)
m[upper.tri(m, diag = TRUE)] <- x
m <- t(m)
m
m <- matrix(N0, dims, dims)
m <- matrix(0, dims, dims)
m[upper.tri(m, diag = TRUE)] <- x
m <- t(m)
m
m.dist <- dist(m)
m.dist
library(ape)
nJ <- nj(m.dist)
plo(nJ)
plot(nJ)
plot(nJ)
q()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
library(EnvRtype)
FN <- paste(getwd(),"/GS_Pipeline_Jan_2022_FnsApp.R",sep="")
source(FN)
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
q()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
getCombinedTab(outputListSTME(),TraitME(),IDColME())
withProgress(message = 'Running Computations', value = 0, {
if(fitEnvCovs() == FALSE){
getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=NULL,KMethod= KGMethod(),FitEnvModels = fitEnvCovs())
}else{
getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=EnvK_Mod(),KMethod= KGMethod(),FitEnvModels = fitEnvCovs())
}
})
getCombinedTab(outputListSTME(),TraitME(),IDColME())
outputListSTME <- eventReactive(input$RunPredictionsME,{
print("runMEIn")
#browser()
withProgress(message = 'Running Computations', value = 0, {
if(fitEnvCovs() == FALSE){
getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=NULL,KMethod= KGMethod(),FitEnvModels = fitEnvCovs())
}else{
getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=EnvK_Mod(),KMethod= KGMethod(),FitEnvModels = fitEnvCovs())
}
})
})
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
outputListSTME <- eventReactive(input$RunPredictionsME,{
print("runMEIn")
# browser()
withProgress(message = 'Running Computations', value = 0, {
if(fitEnvCovs() == FALSE){
getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=NULL,KMethod= KGMethod(),FitEnvModels = fitEnvCovs())
}else{
getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=EnvK_Mod(),KMethod= KGMethod(),FitEnvModels = fitEnvCovs())
}
})
})
IDColME()
TraitME()
b <-  getCombinedTab(outputListSTME(),TraitME(),IDColME())
getCombinedTab <- function(outputListME,TraitME,IDColME){
Models <- c("MM","MDs","MDe")
nTraits <- length(TraitME)
for(nTrt in 1:nTraits){
Pred_Out <- outputListME[[nTrt]]
traitME <- TraitME[nTrt]
Fit_Pred <- Pred_Out[[3]]
nMod <- length(Fit_Pred)
for(nM in 1:nMod){
if(nM==1){
Fit_Out <- Fit_Pred[[nM]]
#Fit_Out_Elmnt_Ln <- apply(Fit_Out,2,function(x) length(unqiue(x)))
#uniqIDCol <- which(Fit_Out_Elmnt_Ln == nrow(Fit_Out))
uniqIDCol <- which(colnames(Fit_Out) == IDColME)
colnames(Fit_Out)[uniqIDCol] <- "UniqID"
colnames(Fit_Out) <- gsub("Obs",paste("Obs",Models[nM],sep="-"),colnames(Fit_Out))
colnames(Fit_Out) <- gsub("Pred",paste("Pred",Models[nM],sep="-"),colnames(Fit_Out))
}else if(nM>1){
Fit_Pred_Tab <- Fit_Pred[[nM]]
# Fit_Pred_Elmnt_Ln <- apply(Fit_Pred_Tab,2,function(x) length(unqiue(x)))
# uniqIDCol <- which(Fit_Pred_Elmnt_Ln == nrow(Fit_Pred_Tab))
uniqIDCol <- which(colnames(Fit_Pred_Tab) == IDColME)
colnames(Fit_Pred_Tab)[uniqIDCol] <- "UniqID"
colnames(Fit_Pred_Tab) <- gsub("Obs",paste("Obs",Models[nM],sep="-"),colnames(Fit_Pred_Tab))
colnames(Fit_Pred_Tab) <- gsub("Pred",paste("Pred",Models[nM],sep="-"),colnames(Fit_Pred_Tab))
Fit_Out <- merge(Fit_Out,Fit_Pred_Tab,by="UniqID")
}
}
if(nTrt ==1){
colnames(Fit_Out) <- gsub("Obs",paste(traitME,"Obs",sep=""),colnames(Fit_Out))
colnames(Fit_Out) <- gsub("Pred",paste(traitME,"Pred",sep=""),colnames(Fit_Out))
Fit_Out_Tab <- Fit_Out
}else{
colnames(Fit_Out) <- gsub("Obs",paste(traitME,"Obs",sep=""),colnames(Fit_Out))
colnames(Fit_Out) <- gsub("Pred",paste(traitME,"Pred",sep=""),colnames(Fit_Out))
Fit_Out_Tab <- merge(Fit_Out_Tab,Fit_Out,by="UniqID",all=TRUE)
}
#selOutCols <- c("IDCols","UniqID","Obs")
Fit_Out_Tab_Sel <- Fit_Out_Tab
}
return(Fit_Out_Tab_Sel)
}
b <-  getCombinedTab(outputListSTME(),TraitME(),IDColME())
getCombinedTab <- function(outputListME,TraitME,IDColME){
Models <- c("MM","MDs","MDe")
nTraits <- length(TraitME)
for(nTrt in 1:nTraits){
Pred_Out <- outputListME[[nTrt]]
traitME <- TraitME[nTrt]
Fit_Pred <- Pred_Out[[3]]
nMod <- length(Fit_Pred)
for(nM in 1:nMod){
if(nM==1){
Fit_Out <- Fit_Pred[[nM]]
#Fit_Out_Elmnt_Ln <- apply(Fit_Out,2,function(x) length(unqiue(x)))
#uniqIDCol <- which(Fit_Out_Elmnt_Ln == nrow(Fit_Out))
uniqIDCol <- which(colnames(Fit_Out) == IDColME)
colnames(Fit_Out)[uniqIDCol] <- "UniqID"
colnames(Fit_Out) <- gsub("Obs",paste("Obs",Models[nM],sep="-"),colnames(Fit_Out))
colnames(Fit_Out) <- gsub("Pred",paste("Pred",Models[nM],sep="-"),colnames(Fit_Out))
}else if(nM>1){
Fit_Pred_Tab <- Fit_Pred[[nM]]
# Fit_Pred_Elmnt_Ln <- apply(Fit_Pred_Tab,2,function(x) length(unqiue(x)))
# uniqIDCol <- which(Fit_Pred_Elmnt_Ln == nrow(Fit_Pred_Tab))
uniqIDCol <- which(colnames(Fit_Pred_Tab) == IDColME)
colnames(Fit_Pred_Tab)[uniqIDCol] <- "UniqID"
colnames(Fit_Pred_Tab) <- gsub("Obs",paste("Obs",Models[nM],sep="-"),colnames(Fit_Pred_Tab))
colnames(Fit_Pred_Tab) <- gsub("Pred",paste("Pred",Models[nM],sep="-"),colnames(Fit_Pred_Tab))
Fit_Out <- merge(Fit_Out,Fit_Pred_Tab,by="UniqID",all=TRUE)
}
}
if(nTrt ==1){
colnames(Fit_Out) <- gsub("Obs",paste(traitME,"Obs",sep=""),colnames(Fit_Out))
colnames(Fit_Out) <- gsub("Pred",paste(traitME,"Pred",sep=""),colnames(Fit_Out))
Fit_Out_Tab <- Fit_Out
}else{
colnames(Fit_Out) <- gsub("Obs",paste(traitME,"Obs",sep=""),colnames(Fit_Out))
colnames(Fit_Out) <- gsub("Pred",paste(traitME,"Pred",sep=""),colnames(Fit_Out))
Fit_Out_Tab <- merge(Fit_Out_Tab,Fit_Out,by="UniqID",all=TRUE)
}
#selOutCols <- c("IDCols","UniqID","Obs")
Fit_Out_Tab_Sel <- Fit_Out_Tab
}
return(Fit_Out_Tab_Sel)
}
b <-  getCombinedTab(outputListSTME(),TraitME(),IDColME())
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
outputListSTME <- reactive({ getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=NULL,KMethod= KGMethod(),FitEnvModels = fitEnvCovs())})
b <- getCombinedTab(outputListSTME(),TraitME(),IDColME())
length(outputListSTME())
length(outputListSTME()[[1]])
length(outputListSTME()[[1]][[1]])
TraitME()
IDColME()
outputListME <- outputListME()
outputListME <- outputListSTME()
TraitME <- TraitME()
IDColME <- IDColME()
Models <- c("MM","MDs","MDe")
nTraits <- length(TraitME)
nTrt <- 1
Pred_Out <- outputListME[[nTrt]]
traitME <- TraitME[nTrt]
Fit_Pred <- Pred_Out[[3]]
nMod <- length(Fit_Pred)
nM <- 1
Fit_Out <- Fit_Pred[[nM]]
#Fit_Out_Elmnt_Ln <- apply(Fit_Out,2,function(x) length(unqiue(x)))
#uniqIDCol <- which(Fit_Out_Elmnt_Ln == nrow(Fit_Out))
uniqIDCol <- which(colnames(Fit_Out) == IDColME)
colnames(Fit_Out)[uniqIDCol] <- "UniqID"
Fit_Out[1:5,]
IDColME
FN <- paste(getwd(),"/GS_Pipeline_Jan_2022_FnsApp.R",sep="")
source(FN)
source("C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App/GS_Pipeline_Jan_2022_FnsApp.R")
outputListSTME <- reactive({ getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=NULL,KMethod= KGMethod(),FitEnvModels = fitEnvCovs())})
b <-  getCombinedTab(outputListSTME(),TraitME(),IDColME())
outputListSTME[[1]][[3]][[1]][1:5,]
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
outputListSTME <- reactive({ getMEPred(DT_Filt_List(),genoDat_List(),TraitME(),KG=NULL,KE=NULL,KMethod= KGMethod(),FitEnvModels = fitEnvCovs())})
b <- getCombinedTab(outputListSTME(),TraitME(),IDColME())
dim(b)
b[1:5,]
IDColsME()
which(colnames(b) %in% IDColsME())
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
plotEnvKData(plotEnvRel(EnvK()))
envData()
dim(envData())
finalData <- envData()
idCol <- which(colnames(final_data) %in% "ID")
final_data <- envData()
idCol <- which(colnames(final_data) %in% "ID")
if(length(idCol)>0) { final_data_V2 <- final_data[,-idCol]}else{final_data_V2 <- final_data}
idCol
final_data_V2 <- final_data[,-idCol]
final_data_V2[1:5,]
dim(final_data_V2)
(final_data_V2[1:5,9:18])
(final_data_V2[1:5,9:19])
(final_data_V2[1:5,9:18])
envData() <- final_data_V2
envData(final_data_V2)
envData  <- reactive(final_data_V2)
dim(envData())
processWthDat()
gaussVar()
EnvK <- reactive( getEnvKernel(envData(),processWthDat(),gaussVar())}))
getEnvKernel <- function(Env.Data,process=FALSE,Gaussian=FALSE){
env.Dat <- Env.Data
if(process==FALSE){
wthVarCols <- c(9:18)
var3 <- colnames(env.Dat)[wthVarCols]
EC.Dat = EnvRtype::W_matrix(env.data = env.Dat,env.id="env", var.id = var3)
KE <- list(W = EnvRtype::env_kernel(env.data = EC.Dat,gaussian=Gaussian)[[2]])
}else if(process==TRUE){
prData <- processWTH(env.data = env.Dat)
var4 = as.vector(colnames(prData)[9:29])
EC.Dat.Pr = EnvRtype::W_matrix(env.data = prData,env.id="env", var.id = var4)
rmECVar <- which(apply(EC.Dat.Pr,2,function(x) length(which(x %in% NaN)))!=0)
EC.Dat.Pr.Filt <- EC.Dat.Pr[,-rmECVar]
KE = list(W = env_kernel(env.data = EC.Dat.Pr.Filt,gaussian=Gaussian)[[2]])
}
return(KE)
}
EnvK <- getEnvKernel(envData(),processWthDat(),gaussVar())
EnvK
EnvK <- getEnvKernel(envData()[,-19],processWthDat(),gaussVar())
EnvK
getEnvKernel()
getEnvKernel
EnvK <- getEnvKernel(envData(),processWthDat(),gaussVar())
EnvK
env.Dat <- envData()
Gaussian <- gaussVar()
wthVarCols <- c(9:18)
var3 <- colnames(env.Dat)[wthVarCols]
var3
EC.Dat = EnvRtype::W_matrix(env.data = env.Dat,env.id="env", var.id = var3)
dim(EC.Dat)
EC.Dat
KE <- list(W = EnvRtype::env_kernel(env.data = EC.Dat,gaussian=Gaussian)[[2]])
KE
wthVarCols <- c(9:17)
var3 <- colnames(env.Dat)[wthVarCols]
var3
EC.Dat = EnvRtype::W_matrix(env.data = env.Dat,env.id="env", var.id = var3)
KE <- list(W = EnvRtype::env_kernel(env.data = EC.Dat,gaussian=Gaussian)[[2]])
KE
var3
var3 <- c("T2M""T2M_MAX","T2M_MIN","PRECTOT","WS2M","RH2M","T2MDEW","ALLSKY_SFC_LW_DWN" "ALLSKY_SFC_SW_DWN")
var3 <- c("T2M","T2M_MAX","T2M_MIN","PRECTOT","WS2M","RH2M","T2MDEW","ALLSKY_SFC_LW_DWN" "ALLSKY_SFC_SW_DWN")
var3 <- c("T2M","T2M_MAX","T2M_MIN","PRECTOT","WS2M","RH2M","T2MDEW","ALLSKY_SFC_LW_DWN","ALLSKY_SFC_SW_DWN")
EC.Dat = EnvRtype::W_matrix(env.data = env.Dat,env.id="env", var.id = var3)
KE <- list(W = EnvRtype::env_kernel(env.data = EC.Dat,gaussian=Gaussian)[[2]])
KE
EnvK <- reactive({KE})
plotEnvKData(plotEnvRel(EnvK()))
prWH <- processWTH(env.Dat)
prWH <- EnvRtype::processWTH(env.Dat)
prWH[1:5,]
dim(prWH)
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
dev.off()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('Hmp_Test.R')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('Hmp_Test.R')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('Hmp_Test.R')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
q()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
dev.off()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
?withProgress
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App_Work/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
